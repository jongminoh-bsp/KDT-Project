name: 🏗️ Terraform Slack Notifications

on:
  workflow_run:
    workflows: ["🤖 Q Auto Analysis & Deploy", "🏗️ Terraform Deploy"]
    types: [requested, in_progress, completed]

jobs:
  terraform-notify:
    runs-on: ubuntu-latest
    steps:
    - name: 📥 Checkout
      uses: actions/checkout@v4
      
    - name: 🔄 Workflow Started
      if: github.event.workflow_run.status == 'requested' || github.event.workflow_run.status == 'in_progress'
      run: |
        curl -X POST -H 'Content-type: application/json' \
        --data '{
          "channel": "#infrastructure",
          "username": "Terraform Bot",
          "icon_emoji": ":gear:",
          "text": "🔄 Terraform 배포가 시작되었습니다...",
          "attachments": [{
            "color": "warning",
            "title": "🏗️ 인프라 배포 진행 중",
            "fields": [
              {
                "title": "📋 워크플로우",
                "value": "${{ github.event.workflow_run.name }}",
                "short": true
              },
              {
                "title": "🌿 브랜치",
                "value": "${{ github.event.workflow_run.head_branch }}",
                "short": true
              },
              {
                "title": "👤 트리거",
                "value": "${{ github.event.workflow_run.actor.login }}",
                "short": true
              },
              {
                "title": "⏰ 시작 시간",
                "value": "${{ github.event.workflow_run.created_at }}",
                "short": true
              },
              {
                "title": "🔗 링크",
                "value": "<${{ github.event.workflow_run.html_url }}|워크플로우 보기>",
                "short": false
              }
            ],
            "footer": "KDT Terraform Pipeline"
          }]
        }' \
        ${{ secrets.SLACK_WEBHOOK_URL }}
        
    - name: ✅ Workflow Success
      if: github.event.workflow_run.status == 'completed' && github.event.workflow_run.conclusion == 'success'
      run: |
        curl -X POST -H 'Content-type: application/json' \
        --data '{
          "channel": "#infrastructure",
          "username": "Terraform Bot",
          "icon_emoji": ":white_check_mark:",
          "text": "✅ Terraform 배포가 성공적으로 완료되었습니다!",
          "attachments": [{
            "color": "good",
            "title": "🎉 인프라 배포 성공",
            "fields": [
              {
                "title": "📋 워크플로우",
                "value": "${{ github.event.workflow_run.name }}",
                "short": true
              },
              {
                "title": "🌿 브랜치",
                "value": "${{ github.event.workflow_run.head_branch }}",
                "short": true
              },
              {
                "title": "👤 배포자",
                "value": "${{ github.event.workflow_run.actor.login }}",
                "short": true
              },
              {
                "title": "⏱️ 소요 시간",
                "value": "약 ${{ github.event.workflow_run.run_duration_ms }}ms",
                "short": true
              },
              {
                "title": "🔗 결과",
                "value": "<${{ github.event.workflow_run.html_url }}|배포 로그 보기>",
                "short": false
              }
            ],
            "footer": "KDT Terraform Pipeline"
          }]
        }' \
        ${{ secrets.SLACK_WEBHOOK_URL }}
        
    - name: ❌ Workflow Failure
      if: github.event.workflow_run.status == 'completed' && github.event.workflow_run.conclusion == 'failure'
      run: |
        curl -X POST -H 'Content-type: application/json' \
        --data '{
          "channel": "#infrastructure",
          "username": "Terraform Bot",
          "icon_emoji": ":x:",
          "text": "❌ Terraform 배포가 실패했습니다!",
          "attachments": [{
            "color": "danger",
            "title": "🚨 인프라 배포 실패",
            "fields": [
              {
                "title": "📋 워크플로우",
                "value": "${{ github.event.workflow_run.name }}",
                "short": true
              },
              {
                "title": "🌿 브랜치",
                "value": "${{ github.event.workflow_run.head_branch }}",
                "short": true
              },
              {
                "title": "👤 트리거",
                "value": "${{ github.event.workflow_run.actor.login }}",
                "short": true
              },
              {
                "title": "❌ 실패 이유",
                "value": "${{ github.event.workflow_run.conclusion }}",
                "short": true
              },
              {
                "title": "🔗 디버그",
                "value": "<${{ github.event.workflow_run.html_url }}|실패 로그 확인>",
                "short": false
              }
            ],
            "footer": "KDT Terraform Pipeline"
          }]
        }' \
        ${{ secrets.SLACK_WEBHOOK_URL }}
        
    - name: ⚠️ Workflow Cancelled
      if: github.event.workflow_run.status == 'completed' && github.event.workflow_run.conclusion == 'cancelled'
      run: |
        curl -X POST -H 'Content-type: application/json' \
        --data '{
          "channel": "#infrastructure",
          "username": "Terraform Bot",
          "icon_emoji": ":warning:",
          "text": "⚠️ Terraform 배포가 취소되었습니다.",
          "attachments": [{
            "color": "warning",
            "title": "⚠️ 인프라 배포 취소",
            "fields": [
              {
                "title": "📋 워크플로우",
                "value": "${{ github.event.workflow_run.name }}",
                "short": true
              },
              {
                "title": "🌿 브랜치",
                "value": "${{ github.event.workflow_run.head_branch }}",
                "short": true
              },
              {
                "title": "👤 취소자",
                "value": "${{ github.event.workflow_run.actor.login }}",
                "short": true
              },
              {
                "title": "🔗 링크",
                "value": "<${{ github.event.workflow_run.html_url }}|워크플로우 보기>",
                "short": true
              }
            ],
            "footer": "KDT Terraform Pipeline"
          }]
        }' \
        ${{ secrets.SLACK_WEBHOOK_URL }}
