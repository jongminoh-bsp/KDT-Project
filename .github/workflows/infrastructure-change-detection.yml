name: 🔍 Infrastructure Change Detection

on:
  push:
    branches: [ main, develop ]
    paths:
      - 'infra/requirements/infrastructure-spec.yml'
  pull_request:
    branches: [ main, develop ]
    paths:
      - 'infra/requirements/infrastructure-spec.yml'

jobs:
  detect-changes:
    name: 🔍 Detect Infrastructure Changes
    runs-on: ubuntu-latest
    
    outputs:
      changes-detected: ${{ steps.changes.outputs.changes-detected }}
      change-summary: ${{ steps.analyze.outputs.summary }}
    
    steps:
    - name: 📥 Checkout Code
      uses: actions/checkout@v4
      with:
        fetch-depth: 2
        
    - name: 🔍 Detect Spec Changes
      id: changes
      run: |
        if git diff --name-only HEAD~1 HEAD | grep -q "infra/requirements/infrastructure-spec.yml"; then
          echo "changes-detected=true" >> $GITHUB_OUTPUT
          echo "✅ Infrastructure spec changes detected"
        else
          echo "changes-detected=false" >> $GITHUB_OUTPUT
          echo "ℹ️ No infrastructure spec changes"
        fi
        
    - name: 📊 Analyze Changes
      id: analyze
      if: steps.changes.outputs.changes-detected == 'true'
      run: |
        echo "🔍 Analyzing infrastructure specification changes..."
        
        # 변경된 라인 수 계산
        LINES_CHANGED=$(git diff HEAD~1 HEAD infra/requirements/infrastructure-spec.yml | grep -E '^[+-]' | grep -v '^[+-]{3}' | wc -l)
        
        # 주요 섹션 변경 감지
        CHANGED_SECTIONS=""
        if git diff HEAD~1 HEAD infra/requirements/infrastructure-spec.yml | grep -q "network:"; then
          CHANGED_SECTIONS="$CHANGED_SECTIONS Network,"
        fi
        if git diff HEAD~1 HEAD infra/requirements/infrastructure-spec.yml | grep -q "compute:"; then
          CHANGED_SECTIONS="$CHANGED_SECTIONS Compute,"
        fi
        if git diff HEAD~1 HEAD infra/requirements/infrastructure-spec.yml | grep -q "kubernetes:"; then
          CHANGED_SECTIONS="$CHANGED_SECTIONS Kubernetes,"
        fi
        if git diff HEAD~1 HEAD infra/requirements/infrastructure-spec.yml | grep -q "database:"; then
          CHANGED_SECTIONS="$CHANGED_SECTIONS Database,"
        fi
        if git diff HEAD~1 HEAD infra/requirements/infrastructure-spec.yml | grep -q "security:"; then
          CHANGED_SECTIONS="$CHANGED_SECTIONS Security,"
        fi
        
        CHANGED_SECTIONS=${CHANGED_SECTIONS%,}  # 마지막 쉼표 제거
        
        SUMMARY="📊 Infrastructure Changes Detected:
        - Lines changed: $LINES_CHANGED
        - Affected sections: ${CHANGED_SECTIONS:-None}
        - Triggered by: @${{ github.actor }}"
        
        echo "summary<<EOF" >> $GITHUB_OUTPUT
        echo "$SUMMARY" >> $GITHUB_OUTPUT
        echo "EOF" >> $GITHUB_OUTPUT
        
        echo "$SUMMARY"

  generate-terraform-vars:
    name: 🔄 Generate Terraform Variables
    runs-on: ubuntu-latest
    needs: detect-changes
    if: needs.detect-changes.outputs.changes-detected == 'true'
    
    steps:
    - name: 📥 Checkout Code
      uses: actions/checkout@v4
      
    - name: 🐍 Setup Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'
        
    - name: 📦 Install Dependencies
      run: |
        pip install pyyaml
        
    - name: 🔄 Generate Terraform Variables
      run: |
        python scripts/generate-terraform-vars.py
        
    - name: 📝 Check Generated Changes
      id: check-changes
      run: |
        if git diff --quiet infra/dev/terraform/terraform.tfvars; then
          echo "terraform-changed=false" >> $GITHUB_OUTPUT
          echo "ℹ️ No Terraform variable changes generated"
        else
          echo "terraform-changed=true" >> $GITHUB_OUTPUT
          echo "✅ Terraform variables updated"
          echo "📋 Changes:"
          git diff infra/dev/terraform/terraform.tfvars
        fi
        
    - name: 💾 Commit Generated Variables
      if: steps.check-changes.outputs.terraform-changed == 'true'
      run: |
        git config --local user.email "action@github.com"
        git config --local user.name "GitHub Action"
        git add infra/dev/terraform/terraform.tfvars
        git commit -m "auto: Update Terraform variables from infrastructure spec

        ${{ needs.detect-changes.outputs.change-summary }}
        
        Generated by: Infrastructure Change Detection
        Commit: ${{ github.sha }}"
        
    - name: 🚀 Push Changes
      if: steps.check-changes.outputs.terraform-changed == 'true'
      uses: ad-m/github-push-action@master
      with:
        github_token: ${{ secrets.GITHUB_TOKEN }}
        branch: ${{ github.ref }}

  trigger-deployment:
    name: 🚀 Trigger Infrastructure Deployment
    runs-on: ubuntu-latest
    needs: [detect-changes, generate-terraform-vars]
    if: |
      needs.detect-changes.outputs.changes-detected == 'true' && 
      (github.ref == 'refs/heads/main' || github.ref == 'refs/heads/develop')
    
    steps:
    - name: 🚀 Trigger Terraform Deployment
      uses: actions/github-script@v7
      with:
        script: |
          const result = await github.rest.actions.createWorkflowDispatch({
            owner: context.repo.owner,
            repo: context.repo.repo,
            workflow_id: 'terraform-deploy.yml',
            ref: context.ref,
            inputs: {
              environment: 'dev',
              action: 'apply'
            }
          });
          
          console.log('🚀 Terraform deployment triggered');
          console.log('Workflow run:', result.status);
          
    - name: 📝 Comment on PR
      if: github.event_name == 'pull_request'
      uses: actions/github-script@v7
      with:
        script: |
          const comment = `## 🚀 Infrastructure Changes Detected
          
          ${{ needs.detect-changes.outputs.change-summary }}
          
          ### 🔄 Next Steps
          - ✅ Terraform variables have been auto-generated
          - 🚀 Infrastructure deployment will be triggered after merge
          - 📊 Review the changes in the Terraform plan
          
          **Note**: This is an automated infrastructure change detection.
          `;
          
          github.rest.issues.createComment({
            issue_number: context.issue.number,
            owner: context.repo.owner,
            repo: context.repo.repo,
            body: comment
          });

  notify-completion:
    name: 🎉 Notify Completion
    runs-on: ubuntu-latest
    needs: [detect-changes, generate-terraform-vars, trigger-deployment]
    if: always() && needs.detect-changes.outputs.changes-detected == 'true'
    
    steps:
    - name: 🎉 Success Notification
      if: needs.trigger-deployment.result == 'success'
      run: |
        echo "🎉 Infrastructure change detection completed successfully!"
        echo "${{ needs.detect-changes.outputs.change-summary }}"
        echo "🚀 Terraform deployment has been triggered"
        
    - name: ⚠️ Partial Success Notification
      if: needs.generate-terraform-vars.result == 'success' && needs.trigger-deployment.result != 'success'
      run: |
        echo "⚠️ Infrastructure changes detected and variables generated"
        echo "${{ needs.detect-changes.outputs.change-summary }}"
        echo "ℹ️ Manual deployment may be required"
